{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,mCAIO,MAAMC,EACXC,YACkBC,EACAC,EACAC,EACAC,QAHAH,GAAAA,OACAC,SAAAA,OACAC,QAAAA,OACAC,UAAAA,EAEhBC,KAAKC,aAECA,aAEN,MAAMC,EAAaC,SAASC,eAAe,iBAErCC,EAAeF,SAASG,cAAc,OAC5CJ,EAAWK,OAAOF,GAGlBA,EAAaG,UAAUC,IAAIT,KAAKJ,GAAI,gBAGpC,MAAMc,EAAkBP,SAASG,cAAc,MAE/CI,EAAgBC,UACdX,KAAKD,UAAY,GAAGC,KAAKH,iBAAiBG,KAAKF,UACjDO,EAAaE,OAAOG,GAGpB,MAAME,EAAYT,SAASG,cAAc,UACzCM,EAAUD,UAAY,IAClBX,KAAKH,UAAYgB,eAAeC,QAAQ,SAC1CT,EAAaE,OAAOK,GAItBA,EAAUG,iBAAiB,SAAS,KAGlC,GAFiBF,eAAeC,QAAQ,SAExBD,eAAeC,QAAQ,QAAS,CAE9C,MAAME,EAASxB,EAAAyB,IAAIC,EAAAC,GAAI,iBAAmBnB,KAAKJ,IAC/CJ,EAAA4B,OAAOJ,OAINK,WACLlB,SAASmB,cAAc,IAAItB,KAAKJ,MAAMwB,UAG1C,MAAMG,EAAQ/B,EAAAyB,IAAIC,EAAAC,GAAI,kBACtB,IAAIK,EAAuB,GAC3BhC,EAAAiC,QAAQF,GAAQG,IACd,MAAMC,EAAcD,EAASE,MAC7B,IAAK,MAAM9B,KAAW0B,EACpB1B,EAAQuB,WAEVG,EAAW,GACX,IAAK,MAAMK,KAAOF,EAChBH,EAASM,KACP,IAAIpC,EACFmC,EACAF,EAAYE,GAAKE,KACjBJ,EAAYE,GAAK/B,QACjB6B,EAAYE,GAAK9B,aAiDzB,WACE,MAAMiC,EAAI7B,SAASC,eAAe,iBAClC4B,EAAEC,UAAYD,EAAEE,aA9ChBC,GAaIR,GAXJ,WACE,MAAMS,EAAeC,OAAOC,OAAOX,GAC7BY,EAASF,OAAOG,KAAKb,GAAa,GACxC,IAAK,IAAIc,EAAI,EAAGA,EAAIL,EAAaM,OAAQD,IACvC,GAAIL,EAAaM,OAAS,GAAI,CAE5B,MAAMC,EAAOnD,EAAAyB,IAAIC,EAAAC,GAAI,iBAAmBoB,GACxC/C,EAAA4B,OAAOuB,IAKXC,MAGJzC,SAASC,eAAe,QAAQW,iBAAiB,SAAUiB,IACzDA,EAAEa,iBACF,MAAM/C,EAAUK,SAASC,eAAe,eAClC0C,EAAO,IAAIC,KACXC,EAAe,CACnBjD,UACE+C,EAAKG,cACL,KACCH,EAAKI,WAAa,GACnB,IACAJ,EAAKK,aACL,MACAL,EAAKM,WACL,IACAN,EAAKO,aACL,KACFtB,KAAMlB,eAAeC,QAAQ,QAC7BhB,QAASA,EAAQwD,OAIbC,EAAa,GACnBA,EAFuB/D,EAAAsC,KAAKP,GAAOM,KAEdmB,EAErBxD,EAAAgE,OAAOjC,EAAOgC,MAOhBE,EAAAC","sources":["src/modules/messagesGames.ts"],"sourcesContent":["import { ref, remove, update, onValue, push } from \"firebase/database\";\r\nimport { db } from \"./firebaseApp\";\r\nimport { logOut } from \"./logout\";\r\n\r\nexport class Messages {\r\n  constructor(\r\n    public readonly id: string,\r\n    public readonly userName: string,\r\n    public readonly message: string,\r\n    public readonly timeStamp: string\r\n  ) {\r\n    this.displayMsg();\r\n  }\r\n  private displayMsg(): void {\r\n    //The section containing all messages (section for each topic?)\r\n    const msgWrapper = document.getElementById(\"messagesGames\");\r\n    //The Div containing one message\r\n    const msgContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    msgWrapper.append(msgContainer);\r\n    //Set the messages ID to the div containing the message\r\n    // msgContainer.id = this.id;\r\n    msgContainer.classList.add(this.id, \"chat-styling\");\r\n\r\n    //Create the userName h4 element\r\n    const userNameElement = document.createElement(\"h4\") as HTMLHeadElement;\r\n    //Set the userName and the timeStamp\r\n    userNameElement.innerText =\r\n      this.timeStamp + `${this.userName} says ${this.message}`;\r\n    msgContainer.append(userNameElement);\r\n\r\n    //Create the remove button\r\n    const removeBtn = document.createElement(\"button\") as HTMLButtonElement;\r\n    removeBtn.innerText = \"X\";\r\n    if (this.userName == sessionStorage.getItem(\"user\")) {\r\n      msgContainer.append(removeBtn);\r\n    }\r\n\r\n    //Removebuttons event\r\n    removeBtn.addEventListener(\"click\", () => {\r\n      const userName = sessionStorage.getItem(\"user\");\r\n\r\n      if (userName == sessionStorage.getItem(\"user\")) {\r\n        //Set the reference in the database\r\n        const msgRef = ref(db, \"/Topics/Games/\" + this.id);\r\n        remove(msgRef);\r\n      }\r\n    });\r\n  }\r\n  public clearDOM(): void {\r\n    document.querySelector(`.${this.id}`).remove();\r\n  }\r\n}\r\nconst dbRef = ref(db, \"/Topics/Games/\");\r\nlet messages: Messages[] = [];\r\nonValue(dbRef, (snapshot) => {\r\n  const messageData = snapshot.val();\r\n  for (const message of messages) {\r\n    message.clearDOM();\r\n  }\r\n  messages = [];\r\n  for (const key in messageData) {\r\n    messages.push(\r\n      new Messages(\r\n        key,\r\n        messageData[key].name,\r\n        messageData[key].message,\r\n        messageData[key].timeStamp\r\n      )\r\n    );\r\n  }\r\n  //Scroll to the bottom\r\n  scrollDown();\r\n  //Remove the 26th post\r\n  function postLimiter(): void {\r\n    const messageArray = Object.values(messageData);\r\n    const index0 = Object.keys(messageData)[0];\r\n    for (let i = 0; i < messageArray.length; i++) {\r\n      if (messageArray.length > 25) {\r\n        //Set the reference in the database\r\n        const post = ref(db, \"/Topics/games/\" + index0);\r\n        remove(post);\r\n      }\r\n    }\r\n  }\r\n  if (messageData) {\r\n    postLimiter();\r\n  }\r\n});\r\ndocument.getElementById(\"send\").addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  const message = document.getElementById(\"userMessage\") as HTMLInputElement;\r\n  const date = new Date();\r\n  const messageToAdd = {\r\n    timeStamp:\r\n      date.getFullYear() +\r\n      \" \" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getUTCDate() +\r\n      \" - \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes() +\r\n      \": \",\r\n    name: sessionStorage.getItem(\"user\"),\r\n    message: message.value,\r\n  };\r\n\r\n  const newKey: string = push(dbRef).key;\r\n  const newMessage = {};\r\n  newMessage[newKey] = messageToAdd;\r\n\r\n  update(dbRef, newMessage);\r\n});\r\n\r\nfunction scrollDown(): void {\r\n  const e = document.getElementById(\"messagesGames\");\r\n  e.scrollTop = e.scrollHeight;\r\n}\r\nlogOut();"],"names":["$8tedJ","parcelRequire","$2a1f9de3251dfcd7$export$ceaacf8b390a3600","constructor","id","userName","message","timeStamp","this","displayMsg","msgWrapper","document","getElementById","msgContainer","createElement","append","classList","add","userNameElement","innerText","removeBtn","sessionStorage","getItem","addEventListener","msgRef","ref","$7McF0","db","remove","clearDOM","querySelector","$2a1f9de3251dfcd7$var$dbRef","$2a1f9de3251dfcd7$var$messages","onValue","snapshot","messageData","val","key","push","name","e","scrollTop","scrollHeight","$2a1f9de3251dfcd7$var$scrollDown","messageArray","Object","values","index0","keys","i","length","post","postLimiter","preventDefault","date","Date","messageToAdd","getFullYear","getMonth","getUTCDate","getHours","getMinutes","value","newMessage","update","$9Mg9r","logOut"],"version":3,"file":"forumGames.ae475b37.js.map"}